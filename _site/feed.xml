<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kevin Hou&#39;s Blog</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 11 Aug 2015 20:30:11 -0700</pubDate>
    <lastBuildDate>Tue, 11 Aug 2015 20:30:11 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 04 Aug 2015 09:22:08 -0700</pubDate>
        <link>http://yourdomain.com/programming/2015/08/04/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2015/08/04/welcome-to-jekyll.html</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>First Blog Post on Github</title>
        <description>
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is my first blog post using Jekyll on Github Pages!&lt;/p&gt;

&lt;p&gt;I’ve been maintaining a &lt;a href=&quot;kevinhou.wix.com/projects&quot;&gt;website&lt;/a&gt; and &lt;a href=&quot;kevinhou.wix.com/projects/blog&quot;&gt;blog&lt;/a&gt;, but I thought it was about time I transitioned to a real, coded website. One of my mentors for my summer internship at Salesforce.com, Seimith Suth, recommended I use Github Pages to host my website and use Jekyll to power my blog. I just got it set up earlier today and I’m ready to start porting my content over!&lt;/p&gt;

&lt;p&gt;A big shoutout to Seimith for her help not just on this, but with all my questions throughout the summer. She’s spent hours and hours helping me through my projects even if she has a lot on her plate. Thanks a bunch :)&lt;/p&gt;

&lt;p&gt;I think I’m going to do a brain dump of everything Seimith taught me just so that I can remember it for personal reference. Lots of markup tricks, Jekyll tips, etc. Anyways, I’m really excited to get this going and I’ll be following up with more blog posts soon so stay tuned!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;Note:&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;Full list of supported languages: http://pygments.org/languages/&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 04 Aug 2015 09:22:08 -0700</pubDate>
        <link>http://yourdomain.com/introduction/2015/08/04/first-post.html</link>
        <guid isPermaLink="true">http://yourdomain.com/introduction/2015/08/04/first-post.html</guid>
        
        <category>github-pages</category>
        
        
        <category>introduction</category>
        
      </item>
    
      <item>
        <title>CSS3 Animation Basics and Callback Solutions</title>
        <description>&lt;p&gt;I’ve been working wtih CSS3 animations lately, primarily to add motion and excitement to my project. I’ve played around with them and I’ve figured out the basics with entrances, exits, transitions, scaling, etc. The method that I’ve been doing is essentially using a state as a boolean. If a button is clicked, the state is toggled and the animation class is added onto the div container. It looks something like this (most of this code is courtesy of Seimith Suth):&lt;/p&gt;

&lt;p&gt;React Code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;getInitialState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bump&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;animation&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;truck &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://gearscrm.com/wp-content/uploads/2015/04/Summer-release-logo.png&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sass (SCSS):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@-webkit-keyframes&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;bounce&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translateX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-45px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;nc&quot;&gt;.animation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/*top: 50%;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  left: 45%;*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.animation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.truck&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shadow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ease&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 
&lt;span class=&quot;nc&quot;&gt;.animation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.bump&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/*Need webkit for codepen here for some reason*/&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bounce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iteration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The problem with this, is that the button simply toggles between true false. There is no ellegant way to set the state back to false after the animation is done. However, there are some alternatives:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In my opinion, the easier solution would be simply to use a setTimeout function to automatically run a function that sets the state as false after a given amount of time. SImply set the interval to be equal to or longer than the animation and it should work. Simple!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The second way is to use jQuery. I’m no expert on jQuery so I’ll let Google do the work for me. I know a lot of people were posting about it so I figured there is a solution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope this helped!&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Jul 2015 07:07:02 -0700</pubDate>
        <link>http://yourdomain.com/programming/2015/07/17/css3-animation-basics-and-callback-solutions.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2015/07/17/css3-animation-basics-and-callback-solutions.html</guid>
        
        <category>css</category>
        
        <category>css3</category>
        
        <category>html</category>
        
        <category>reactjs</category>
        
        <category>javascript</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Creating a Spike on Github</title>
        <description>&lt;p&gt;In programming, a spike a place to test out various methods before actually coding the finished project. For the past week, I’ve been practicing with a whole host of components that I will ultimately use in my final project such as modals, lists, animation, React components, json data, states, props…the list goes on and on and on. I didn’t want to lose this code because, believe it or not, it can actually be really helpful down the road. Sometime I’ll forget how I did something originally, and I’ll have to refer back to the previous file. To solve this issue, I created a Spike branch in Github.&lt;/p&gt;

&lt;p&gt;I essentially backed up my spike so that I could reference it later on. To be honest, I’m not entirely sure what I did, but my mentor told me that I was backing up my code so I’ll take his word for it. Originally, my spike was in my Master branch. I used this code in terminal to back it up:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./../../../../media/blog/images/Github Spike.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hope this helps! It’s a good way of storing your work so that you can reference it later. You might also want to store a local version of the spike by downlaoding the zip file just in case.&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Jul 2015 06:10:57 -0700</pubDate>
        <link>http://yourdomain.com/programming/2015/07/17/creating-a-spike-on-github.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2015/07/17/creating-a-spike-on-github.html</guid>
        
        <category>salesforce</category>
        
        <category>unix</category>
        
        <category>github</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Salesforce Internship - Summer 2015</title>
        <description>&lt;p&gt;&lt;img width=&quot;250&quot; style=&quot;margin-left: 10%&quot; src=&quot;http://www.amzur.com/wp-content/uploads/2015/04/Salesforce_Logo.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve been interning at Salesforce.com for the past couple weeks this summer and I figured I would keep a section of my blog devoted to my thoughts, experiences, and anything that comes to mind! I’ve been working as an Engineer on the UX Design team. Unfortunately, I can’t disclose my current project, but I will be able to show you guys in the future. I started working at Salesforce on June 22nd and these past three weeks have been some of my favorite weeks of my life! I’ve met so many amazing people and learned a ton of new skills. It’s truly a blessing to have this opportunity and I intend to make the most of it.&lt;/p&gt;

&lt;p&gt;Here’s some background on the kinds of things I’m doing/using while I’m working here:
Computer: Macbook Pro 15” Retina from 2014 with 2.8 GHz Intel Core i7, 16 gb of ram, and a 512 gb SSD
Applications: Sublime Text 2, iTerm 2, Sketch, Slack, Chrome
Languages: HTML, CSS, SCSS, Vanilla Javascript, React, ES6, and a little bit of Angular in the beginning
Websites: Github, Codeschool, Codeacademy, W3Schools, Codepen.io, Heroku, Gmail&lt;/p&gt;

&lt;p&gt;I am one of two high schoolers in the Futureforce intern program at Salesforce.com, so the learning curve is pretty steep. I’m doing my best and I’ve really learned a lot!&lt;/p&gt;

&lt;p&gt;I’ll be posting about various topics including bug solutions, life advice, and my perspective on what the corporate life is like (hint: free ice cream).&lt;/p&gt;
</description>
        <pubDate>Thu, 16 Jul 2015 06:35:21 -0700</pubDate>
        <link>http://yourdomain.com/work/2015/07/16/salesforce-internship---summer-2015.html</link>
        <guid isPermaLink="true">http://yourdomain.com/work/2015/07/16/salesforce-internship---summer-2015.html</guid>
        
        <category>salesforce</category>
        
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Common React Issue - Button Clicks</title>
        <description>&lt;p&gt;I’ve started to get the hang of &lt;b&gt;React&lt;/b&gt; and &lt;b&gt;ES6&lt;/b&gt;, but it’s only been three weeks and there are of course tons and tons of things I haven’t learned yet. I’ll go over a couple of things that I think anyone starting to learn React could benefit from. In this blog post I’ll go over Button Clicks.&lt;/p&gt;

&lt;p&gt;React works differently from plain old Vanilla Javascript in a couple of ways. One of which is the modular structure of the code. Each module has functions within it that can be accessed only by that specific module.&lt;/p&gt;

&lt;p&gt;You might be encountering a couple errors:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;onClick function triggering when button loads&lt;/li&gt;
  &lt;li&gt;The onClick function doesn&#39;t recognize the function its supposed to trigger&lt;/li&gt;
  &lt;li&gt;The function refreshes the page&lt;/li&gt;
  &lt;li&gt;You can&#39;t pass parameters into the function&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See the corresponding number below for potential solutions and explanations.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4&gt;1. Prevent onClick from automatically running&lt;/h4&gt;
&lt;p&gt;The reason it automatically runs is because you are triggering the function when referencing it. Your code may look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The parentheses indicate that the function should be executed. When the page loads, it sees the parenthesis and runs the corresponding function. To fix the issue, simply remove the parenthesis. To pass parameters in, see the section below.&lt;/p&gt;

&lt;h4&gt;2. Force onClick to recognize function&lt;/h4&gt;
&lt;p&gt;Use&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;at the end of&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See example below.&lt;/p&gt;

&lt;h4&gt;3. Prevent Auto-Refresh&lt;/h4&gt;
&lt;p&gt;Simply use the: preventDefault() function&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Prevents auto refresh&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;4. Passing Parameters&lt;/h4&gt;
&lt;p&gt;Add the parameters in the .bind(this) as seen below&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;buttonClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 16 Jul 2015 06:10:57 -0700</pubDate>
        <link>http://yourdomain.com/programming/2015/07/16/common-react-issue---button-clicks.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2015/07/16/common-react-issue---button-clicks.html</guid>
        
        <category>salesforce</category>
        
        <category>reactjs</category>
        
        <category>javavscript</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Jubel - MusicViz Demo</title>
        <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ntAn46zWuZE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I just published another video highlighting the functionality of my app, MusicViz. I used the song “Jubel” by Klingande both because it works well with the music visualizer and because I simply love the song. It’s a wonderful combination of electronic and instrumental music. Because the song doesn’t remain in “high gear” (doesn’t constantly trigger the visualizer) for the entire song, there’s some times where the music visualizer doens’t spawn any dots. Watching it create arcs across the circle was mesmerizing in itself and the contrast between these intense and non-intense periods was interesting.&lt;/p&gt;

&lt;p&gt;I fixed the issue of not recording in high definition by using one of the high-powered school computers. I was able to screen caputre at 1080p and then layer the song on top of the noiseless video. This method worked well and I think that’s what I will do for future videos.&lt;/p&gt;

&lt;p&gt;Stay tuned for more demos and explanatory videos!&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Mar 2015 12:15:43 -0700</pubDate>
        <link>http://yourdomain.com/2015/03/11/jubel---musicviz-demo.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2015/03/11/jubel---musicviz-demo.html</guid>
        
        <category>processing</category>
        
        <category>java</category>
        
        <category>musicviz</category>
        
        
      </item>
    
      <item>
        <title>MusicViz Demo with Goooo by TNGHT</title>
        <description>&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/sbJhaRZhsZo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;This is &lt;b&gt;MusicViz&lt;/b&gt;. Often times music visualizers are created with Adobe Aftereffects for each individual song. Unlike these other “music visualizers,” I wanted to make something that works with any song or even any sound. I programmed this with Java and the Minim library.&lt;/p&gt;

&lt;h4&gt;Features:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Customizable animations (speed, fade time, sensitivity)&lt;/li&gt;
  &lt;li&gt;Five color-coordinated themes and backgrounds&lt;/li&gt;
  &lt;li&gt;Works with any “.mp3” file and many other common music file types&lt;/li&gt;
  &lt;li&gt;Compatible with Mac, PC, and Linux&lt;/li&gt;
  &lt;li&gt;Click to create a “firework” of dots&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unfortunately, I could not find a good screen recorder online that was both free and could record high frame rates. I opted to mirror my display with a TV then record the TV with a camcorder. Sorry for the low quality, hopefully I’ll get that sorted out in the future.&lt;/p&gt;

&lt;p&gt;I will be uploading more songs with MusicViz soon. I am also working on an explanatory video about how the software works and what goes on behind the scenes. I coded this entirely with Processing.&lt;/p&gt;

&lt;p&gt;I also do not own rights to the song “Goooo” by TNGHT. No copyright infringement intended! (That’s what everyone says in their videos so I guess I’ll do that too) It’s a great electronic song that highlights MusicViz’s ability to detect beat drops, etc.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed it!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kevinhou.wix.com/projects&quot;&gt;Project Portfolio&lt;/a&gt;&lt;br /&gt;
I have galleries and blog posts that highlight my wood, electronics, programming, and metal projects.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Mar 2015 05:26:43 -0700</pubDate>
        <link>http://yourdomain.com/programming/2015/03/10/musicviz-demo-with-goooo-by-tnght.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2015/03/10/musicviz-demo-with-goooo-by-tnght.html</guid>
        
        <category>java</category>
        
        <category>processing</category>
        
        <category>musicviz</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>iPhone Made Out of 350 Math Functions</title>
        <description>&lt;p&gt;Last year, I made an iPhone using about 350 linear, conic, and piecewise functions. It took about 20 hours to make and was meant to model an iPhone home display. It is actually supposed to have animation, but due to the sheer number of equations, my browser would constantly crash if I tried it. I own a Mac with Retina display so I do not encourage you to try the animation.&lt;/p&gt;

&lt;p&gt;Here is the link:
&lt;a href=&quot;https://www.desmos.com/calculator/b2qi05nasi&quot;&gt;https://www.desmos.com/calculator/b2qi05nasi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My graph was actually featured as one of the “Creative Picks” for the Desmos site!
&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Here are the different types of equations I used and the total times I used them.
&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone Stats.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Below are images of the finsihed product with each function labeled. The number corresponds to the function on the Desmos file as well as the number on the list of all the functions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone Labeled 3.jpg&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone Labeled 2.jpg&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone Labeled 1.jpg&quot; /&gt;
&lt;br /&gt;
&lt;img src=&quot;./../../../../media/blog/images/Desmos/Desmos iPhone Labeled 4.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Circles:
2, 3, 4, 5, 6, 16, 17, 18, 19, 31, 32, 33, 34, 43, 44, 56, 57, 58, 61, 68, 69, 88, 89, 90, 91, 92, 93, 98, 100, 115, 117, 125, 126, 127, 128, 141, 142, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 169, 170, 171, 172, 176, 177, 181, 182, 184, 189, 190, 194, 195, 199, 200, 204, 205, 220, 224, 225, 230, 231, 253, 254, 260, 273, 274, 281, 282, 283, 284, 291, 192, 298, 299, 306, 307, 308, 316, 317, 318, 324.&lt;/p&gt;

&lt;p&gt;Ellipses:
7, 8, 27, 37, 38, 59, 62, 102, 103, 104, 105, 106, 107, 108, 109, 129, 133, 143, 185, 296, 310, 312.&lt;/p&gt;

&lt;p&gt;Hyperbolas:
9, 10, 20, 22, 25, 26, 29, 30, 35, 36, 39, 41, 42, 45, 48, 51, 52, 54, 55, 60, 66, 67, 86, 87, 99, 101, 113, 114, 116, 121, 122, 139, 140, 156, 157, 165, 166, 167, 168, 174, 175, 179, 180, 187, 188, 197, 198, 202, 203, 222, 223, 251, 252, 258, 270, 271, 272, 286, 287, 289, 290, 304, 305, 314, 315.&lt;/p&gt;

&lt;p&gt;Parabolas:
21, 23, 24, 70, 71, 72, 73, 96, 123, 134, 135, 267, 268, 275, 276, 277, 294, 302, 309.&lt;/p&gt;

&lt;p&gt;Lines (Linear Equations):
11, 12, 13, 14, 49, 50, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 95, 111, 112, 124, 130, 137, 144, 145, 146, 147, 148, 149, 183, 215, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 259, 261, 263, 264, 265, 266, 278, 279, 285, 293, 295, 300, 301, 311, 319, 320, 321, 322, 325.&lt;/p&gt;

&lt;p&gt;Semicircles:
46, 47, 120, 131, 132, 192, 193, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 226, 227, 228, 229, 234.&lt;/p&gt;

&lt;p&gt;Sine Wave (Trig Functions):
118, 119, 120.&lt;/p&gt;

&lt;p&gt;Piecewise Function (Two Lines):
214.&lt;/p&gt;

&lt;p&gt;Animation Slider:
1.&lt;/p&gt;

&lt;p&gt;Place Holders:
15, 28, 40, 53, 65, 85, 97, 110, 138, 155, 164, 173, 178, 186, 191, 196, 201, 221, 250, 262, 269, 280, 288, 297, 303, 313, 323.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Mar 2015 11:38:01 -0700</pubDate>
        <link>http://yourdomain.com/school/2015/03/08/iphone-made-out-of-350-math-functions.html</link>
        <guid isPermaLink="true">http://yourdomain.com/school/2015/03/08/iphone-made-out-of-350-math-functions.html</guid>
        
        <category>desmos</category>
        
        
        <category>school</category>
        
      </item>
    
      <item>
        <title>Handwriting Font App (With Video and Source Code)</title>
        <description>&lt;p&gt;I recently programmed my own handwriting font app using Processing, a Java-based programming language. The program prompts the user’s handwriting, stores it locally, then allows the user to type in their own handwriting. I spent many hours on this project, and I had a lot of fun making it! I was really going for a program that would not only be a challenge programming-wise, but would also be a great tool to have. The features include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Functioning typing interface&lt;/li&gt;
  &lt;li&gt;Font size&lt;/li&gt;
  &lt;li&gt;Support of multiple users&lt;/li&gt;
  &lt;li&gt;Line wrap and backspace&lt;/li&gt;
  &lt;li&gt;Numerous special characters&lt;/li&gt;
  &lt;li&gt;Export a PDF vector file to be laser cut/fabricated&lt;/li&gt;
  &lt;li&gt;One of the coolest parts about this project is the ability to print out what you&#39;ve typed on a Watercolor Bot. This is a CNC machine that uses a pen to draw out vector files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;a href=&quot;http://youtu.be/9qK6qmGWyB4&quot;&gt;video&lt;/a&gt; of the program in action.&lt;/p&gt;

&lt;p&gt;I was very proud of this program. I spent a great deal of time on it and I was thrilled when I finally got it to work. Because of the complex nature of this project, I learned a great deal about both programming in Processing (PShapes, etc.) and the Watercolor Bot. My attempt at programming a “simple” word processor also revealed how difficult and complex Microsoft Office is.&lt;/p&gt;

&lt;p&gt;If I had more time, I would add bold, italics, colored fonts, underlining, a curser, spell check, better line wrap, etc.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/khou22/Handwriting-Font-App&quot;&gt;source code&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Dec 2014 10:38:01 -0800</pubDate>
        <link>http://yourdomain.com/programming/2014/12/07/handwriting-font-app-with-video-and-source-code.html</link>
        <guid isPermaLink="true">http://yourdomain.com/programming/2014/12/07/handwriting-font-app-with-video-and-source-code.html</guid>
        
        <category>processing</category>
        
        <category>java</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
